{"version":3,"sources":["ticket.js","table.js","newTicket.js","App.js","serviceWorker.js","index.js"],"names":["Ticket","onDragStart","ev","id","dataTransfer","setData","onDeleteTicket","preventDefault","_this","props","_this2","this","_this$props","ticket","status","classDate","to","length","react_default","a","createElement","e","draggable","className","concat","type","aria-label","onClick","aria-hidden","title","places","from","react_fontawesome_index_es","icon","transport","resume","Component","Table","onDragOver","onDrop","tickets","onDropTicket","map","src_ticket_0","key","NewTicket","state","showForm","setState","target","value","onSendTicket","event","_this$state","onSubmit","placeholder","onChange","onChangeTitle","onChangePlaces","onChangeFrom","onChangeTo","onChangeStatus","onChangeTransport","defaultValue","onChangeResume","displayForm","library","add","faGlobeAfrica","faGlobeEurope","faGlobeAmericas","faGlobeAsia","faBus","faCar","faMotorcycle","faPlane","faShip","faShuttleVan","faTrain","faThumbsUp","faBicycle","App","lastID","tables","cat","getData","filter","tiket","Object","defineProperty","index","findIndex","x","splice","newTitle","newPlaces","newFrom","newTo","newTransport","newStatus","newResume","push","orderingTable","currentTickets","currentTable","table","orderedTable","src_table_0","src_newTicket","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.160b4ad6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./ticket.css\";\r\n\r\nclass Ticket extends Component {\r\n  onDragStart = (ev, id) => {\r\n    ev.dataTransfer.setData(\"id\", id);\r\n  };\r\n\r\n  onDeleteTicket = (ev, id) => {\r\n    ev.preventDefault();\r\n    this.props.onDeleteTicket(id);\r\n  };\r\n  render() {\r\n    const { ticket, status } = this.props;\r\n    let classDate = \"col-md-12\";\r\n    if (ticket.to.length > 0) classDate = \"col-md-6\";\r\n    return (\r\n      <div\r\n        onDragStart={e => this.onDragStart(e, ticket.id)}\r\n        draggable\r\n        className={`ticket ${status} draggable badge col-md-12`}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n          onClick={e => this.onDeleteTicket(e, ticket.id)}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <h3>{ticket.title}</h3>\r\n        <div className=\"container-fluid row\">\r\n          {ticket.places.length > 0 ? (\r\n            <span className=\"col-md-12\">Lieux: {ticket.places}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {ticket.from.length > 0 ? (\r\n            <span className={classDate}>Du: {ticket.from}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {ticket.to.length > 0 ? (\r\n            <span className=\"col-md-6\">au: {ticket.to}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {ticket.places.length > 0 ? (\r\n            <span className=\"col-md-12\">\r\n              <FontAwesomeIcon icon={ticket.transport} />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <span className=\"col-md-12\">{ticket.resume}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Ticket;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Ticket from \"./ticket.js\";\r\nimport \"./table.css\";\r\nclass Table extends Component {\r\n  onDragOver = ev => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  onDropTicket(e, status) {\r\n    e.preventDefault();\r\n    this.props.onDrop(e, status);\r\n  }\r\n\r\n  render() {\r\n    const { status, tickets, onDeleteTicket } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          \"table-droppable col-md-12 table-\" +\r\n          status +\r\n          \" droppable container-fluid row\"\r\n        }\r\n        onDragOver={e => this.onDragOver(e)}\r\n        onDrop={e => {\r\n          this.onDropTicket(e, status);\r\n        }}\r\n      >\r\n        <div className={\"col-md-12\"}>\r\n          <span className={\"label label-default\"}>{status}</span>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          {tickets.map(ticket => (\r\n            <Ticket\r\n              key={ticket.id}\r\n              ticket={ticket}\r\n              status={status}\r\n              onDeleteTicket={onDeleteTicket}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./newTicket.css\";\r\n\r\nclass NewTicket extends Component {\r\n  state = {\r\n    status: \"desire\",\r\n    title: \"\",\r\n    places: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    transport: \"plane\",\r\n    resume: \"\",\r\n    showForm: \"hide\"\r\n  };\r\n  onChangeTitle(e) {\r\n    this.setState({ title: e.target.value });\r\n  }\r\n  onChangePlaces(e) {\r\n    this.setState({ places: e.target.value });\r\n  }\r\n  onChangeFrom(e) {\r\n    this.setState({ from: e.target.value });\r\n  }\r\n  onChangeTo(e) {\r\n    this.setState({ to: e.target.value });\r\n  }\r\n  onChangeTransport(e) {\r\n    this.setState({ transport: e.target.value });\r\n  }\r\n  onChangeStatus(e) {\r\n    this.setState({ status: e.target.value });\r\n  }\r\n  onChangeResume(e) {\r\n    this.setState({ resume: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      title: \"\",\r\n      places: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      transport: \"\",\r\n      status: \"\",\r\n      resume: \"\"\r\n    });\r\n    this.props.onSendTicket(\r\n      this.state.title,\r\n      this.state.places,\r\n      this.state.from,\r\n      this.state.to,\r\n      this.state.transport,\r\n      this.state.status,\r\n      this.state.resume\r\n    );\r\n  }\r\n\r\n  displayForm(e, event) {\r\n    e.preventDefault();\r\n    this.setState({ showForm: event });\r\n  }\r\n\r\n  render() {\r\n    const { title, places, from, to, resume, showForm } = this.state;\r\n    return (\r\n      <div className=\"container-fluid row\">\r\n        {showForm === \"show\" ? (\r\n          <form\r\n            className=\"form-newticket form-horizontal col-md-12\"\r\n            onSubmit={e => this.onSubmit(e)}\r\n          >\r\n            <div className=\"container-fluid row\">\r\n              <span className=\"col-md-12 label label-default label-form\">\r\n                Nouveau ticket\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Titre</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={title}\r\n                  id=\"titleTicket\"\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  onChange={e => this.onChangeTitle(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Lieu(x)</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"placesTicket\"\r\n                  type=\"text\"\r\n                  value={places}\r\n                  placeholder=\"\"\r\n                  onChange={e => this.onChangePlaces(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Date du</label>\r\n              <div className=\"col-sm-4 col-md-2\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"fromTicket\"\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  value={from}\r\n                  onChange={e => this.onChangeFrom(e)}\r\n                />\r\n              </div>\r\n              <label className=\"col-sm-1 col-form-label\">au</label>\r\n              <div className=\"col-sm-4 col-md-2\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"toTicket\"\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  value={to}\r\n                  onChange={e => this.onChangeTo(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-4\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={e => this.onChangeStatus(e)}\r\n                >\r\n                  <option value=\"desire\">Envie</option>\r\n                  <option value=\"planned\">Prévu</option>\r\n                  <option value=\"current\">En cours</option>\r\n                  <option value=\"finished\">Déjà fait</option>\r\n                </select>\r\n              </div>\r\n              <label className=\"col-sm-2 col-form-label\">\r\n                Moyen de transport\r\n              </label>\r\n              <div className=\"col-sm-4\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={e => this.onChangeTransport(e)}\r\n                >\r\n                  <option value=\"plane\">Avion</option>\r\n                  <option value=\"ship\">Bateau</option>\r\n                  <option value=\"bus\">Bus</option>\r\n                  <option value=\"motorcycle\">Moto</option>\r\n                  <option value=\"thumbs-up\">Stop</option>\r\n                  <option value=\"train\">Train</option>\r\n                  <option value=\"shuttle-van\">Van</option>\r\n                  <option value=\"bicycle\">Vélo</option>\r\n                  <option value=\"car\">Voiture</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 control-label\">Résumé</label>\r\n              <div className=\"col-sm-10\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  defaultValue={resume}\r\n                  onChange={e => this.onChangeResume(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default\"\r\n              onClick={e => this.displayForm(e, \"hide\")}\r\n            >\r\n              Annuler\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Ajouter\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={e => this.displayForm(e, \"show\")}\r\n          >\r\n            Nouveau Ticket\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTicket;\r\n","import React, { Component } from \"react\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGlobeAfrica,\r\n  faGlobeEurope,\r\n  faGlobeAmericas,\r\n  faGlobeAsia,\r\n  faBus,\r\n  faCar,\r\n  faMotorcycle,\r\n  faPlane,\r\n  faShip,\r\n  faShuttleVan,\r\n  faTrain,\r\n  faThumbsUp,\r\n  faBicycle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./App.css\";\r\nimport \"./bootstrap.css\";\r\n\r\nimport Table from \"./table.js\";\r\nimport NewTicket from \"./newTicket\";\r\n\r\nlibrary.add(\r\n  faGlobeAfrica,\r\n  faGlobeEurope,\r\n  faGlobeAmericas,\r\n  faGlobeAsia,\r\n  faBus,\r\n  faCar,\r\n  faMotorcycle,\r\n  faPlane,\r\n  faShip,\r\n  faShuttleVan,\r\n  faTrain,\r\n  faThumbsUp,\r\n  faBicycle\r\n);\r\n\r\nclass App extends Component {\r\n  state = {\r\n    lastID: 7,\r\n    tables: [\"desire\", \"planned\", \"current\", \"finished\"],\r\n    tickets: [\r\n      {\r\n        id: 1,\r\n        status: \"desire\",\r\n        title: \"Amerique du Sud\",\r\n        places: \"Colombie - Pérou\",\r\n        from: \"\",\r\n        to: \"\",\r\n        transport: \"\",\r\n        resume: \"un jour peut-être\"\r\n      },\r\n      {\r\n        id: 2,\r\n        status: \"finished\",\r\n        title: \"Japan\",\r\n        places: \"Japon\",\r\n        from: \"21-05-2016\",\r\n        to: \"10-06-2016\",\r\n        transport: \"plane\",\r\n        resume: \"ZEeeeeeen !!!\"\r\n      },\r\n      {\r\n        id: 3,\r\n        status: \"planned\",\r\n        title: \"Sri Lanka\",\r\n        places: \"Sri lanka\",\r\n        from: \"\",\r\n        to: \"\",\r\n        transport: \"plane\",\r\n        resume: \"Bientôt !!!\"\r\n      },\r\n      {\r\n        id: 4,\r\n        status: \"finished\",\r\n        title: \"Norway\",\r\n        places: \"Norvège\",\r\n        from: \"28-05-2017\",\r\n        to: \"7-06-2017\",\r\n        transport: \"plane\",\r\n        resume: \"Mouillé !!!\"\r\n      },\r\n      {\r\n        id: 5,\r\n        status: \"current\",\r\n        title: \"Chez les parents\",\r\n        places: \"Lyon\",\r\n        from: \"01-12-2018\",\r\n        to: \"\",\r\n        transport: \"\",\r\n        resume: \"Trop long !!!\"\r\n      },\r\n      {\r\n        id: 6,\r\n        status: \"finished\",\r\n        title: \"Asia 2k18\",\r\n        places: \"Japon\",\r\n        from: \"23-01-2018\",\r\n        to: \"07-06-2018\",\r\n        transport: \"plane\",\r\n        resume: \"Enorme !!!\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData(\"id\");\r\n    let tickets = this.state.tickets.filter(tiket => {\r\n      if (tiket.id == id) {\r\n        tiket.status = cat;\r\n      }\r\n      return tiket;\r\n    });\r\n    this.setState({ tickets, tickets });\r\n  };\r\n\r\n  onDeleteTicket = id => {\r\n    const tickets = this.state.tickets;\r\n    let index = tickets.findIndex(x => x.id === id);\r\n    tickets.splice(index, 1);\r\n    this.setState({ tickets });\r\n  };\r\n\r\n  onSendTicket = (\r\n    newTitle,\r\n    newPlaces,\r\n    newFrom,\r\n    newTo,\r\n    newTransport,\r\n    newStatus,\r\n    newResume\r\n  ) => {\r\n    const tickets = this.state.tickets;\r\n    let lastID = this.state.lastID;\r\n    tickets.push({\r\n      id: lastID,\r\n      title: newTitle,\r\n      places: newPlaces,\r\n      from: newFrom,\r\n      to: newTo,\r\n      transport: newTransport,\r\n      status: newStatus,\r\n      resume: newResume\r\n    });\r\n    this.setState({ tickets: tickets, lastID: lastID + 1 });\r\n  };\r\n\r\n  orderingTable = (tables, tickets) => {\r\n    let currentTable = [];\r\n    let currentTickets;\r\n    tables.map(table => {\r\n      currentTickets = tickets.filter(ticket => ticket.status === table);\r\n      currentTable.push({ status: table, tickets: currentTickets });\r\n    });\r\n    return currentTable;\r\n  };\r\n\r\n  render() {\r\n    const { tables, tickets } = this.state;\r\n    let orderedTable = this.orderingTable(tables, tickets);\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n          <span className=\"navbar-brand mb-0 h1\">Pounda</span>\r\n        </nav>\r\n        <div className=\"main-container container-fluid row\">\r\n          {orderedTable.map(table => (\r\n            <div\r\n              key={table.status}\r\n              className=\"table-container col-md-3 container-fluid row\"\r\n            >\r\n              <Table\r\n                status={table.status}\r\n                tickets={table.tickets}\r\n                onDrop={this.onDrop}\r\n                onDeleteTicket={this.onDeleteTicket}\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"form-container col-md-12 container-fluid row\">\r\n            <NewTicket onSendTicket={this.onSendTicket} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}