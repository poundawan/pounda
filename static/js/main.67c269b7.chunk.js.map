{"version":3,"sources":["Icon.js","ticket.js","table.js","newTicket.js","App.js","serviceWorker.js","index.js"],"names":["Icon","_ref","name","className","style","props","Object","objectWithoutProperties","react_default","a","createElement","assign","concat","Ticket","onDragStart","ev","id","dataTransfer","setData","onDeleteTicket","preventDefault","_this","_this2","this","_this$props","ticket","status","classDate","to","length","e","draggable","type","aria-label","onClick","aria-hidden","title","places","from","transport","resume","Component","Table","onDragOver","onDrop","tickets","onDropTicket","map","src_ticket_0","key","today","Date","NewTicket","state","showForm","onChangeFrom","bind","assertThisInitialized","onChangeTo","setState","target","value","date","compareAsc","format","onSendTicket","event","_this$state","onSubmit","placeholder","onChange","onChangeTitle","onChangePlaces","es","selectsStart","isClearable","dateFormat","selected","startDate","endDate","showYearDropdown","showWeekNumbers","dateFormatCalendar","scrollableYearDropdown","showMonthDropdown","yearDropdownItemNumber","selectsEnd","onChangeStatus","onChangeTransport","defaultValue","onChangeResume","displayForm","App","lastID","tables","cat","getData","filter","tiket","defineProperty","index","findIndex","x","splice","newTitle","newPlaces","newFrom","newTo","newTransport","newStatus","newResume","console","log","push","orderingTable","currentTickets","currentTable","table","orderedTable","src_table_0","src_newTicket","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67c269b7.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default ({ name, className, style, ...props }) => (\r\n  <i className={`${className} fa fa-${name}`} style={style} {...props} />\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./ticket.css\";\r\n\r\nimport Icon from \"./Icon\";\r\n\r\nclass Ticket extends Component {\r\n  onDragStart = (ev, id) => {\r\n    ev.dataTransfer.setData(\"id\", id);\r\n  };\r\n\r\n  onDeleteTicket = (ev, id) => {\r\n    ev.preventDefault();\r\n    this.props.onDeleteTicket(id);\r\n  };\r\n  render() {\r\n    const { ticket, status } = this.props;\r\n    let classDate = \"col-md-12\";\r\n    if (ticket.to.length > 0) classDate = \"col-md-6\";\r\n    return (\r\n      <div\r\n        onDragStart={e => this.onDragStart(e, ticket.id)}\r\n        draggable\r\n        className={`ticket ${status} draggable badge col-md-12`}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n          onClick={e => this.onDeleteTicket(e, ticket.id)}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <h3>{ticket.title}</h3>\r\n        <div className=\"container-fluid row\">\r\n          {ticket.places.length > 0 ? (\r\n            <span className=\"col-md-12\">Lieux: {ticket.places}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {ticket.from.length > 0 ? (\r\n            <span className={classDate}>Du: {ticket.from}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {ticket.to.length > 0 ? (\r\n            <span className=\"col-md-6\">au: {ticket.to}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {ticket.transport.length > 0 && ticket.transport != \"none\" ? (\r\n            <span className=\"col-md-12\">\r\n              <Icon name={ticket.transport} />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <span className=\"col-md-12\">{ticket.resume}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Ticket;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Ticket from \"./ticket.js\";\r\nimport \"./table.css\";\r\nclass Table extends Component {\r\n  onDragOver = ev => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  onDropTicket(e, status) {\r\n    e.preventDefault();\r\n    this.props.onDrop(e, status);\r\n  }\r\n\r\n  render() {\r\n    const { status, tickets, onDeleteTicket } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          \"table-droppable col-md-12 table-\" +\r\n          status +\r\n          \" droppable container-fluid row\"\r\n        }\r\n        onDragOver={e => this.onDragOver(e)}\r\n        onDrop={e => {\r\n          this.onDropTicket(e, status);\r\n        }}\r\n      >\r\n        <div className={\"col-md-12\"}>\r\n          <span className={\"label label-default\"}>{status}</span>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          {tickets.map(ticket => (\r\n            <Ticket\r\n              key={ticket.id}\r\n              ticket={ticket}\r\n              status={status}\r\n              onDeleteTicket={onDeleteTicket}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./newTicket.css\";\r\n\r\nconst today = new Date();\r\n\r\nclass NewTicket extends Component {\r\n  state = {\r\n    status: \"desire\",\r\n    title: \"\",\r\n    places: \"\",\r\n    from: today,\r\n    to: today,\r\n    transport: \"none\",\r\n    resume: \"\",\r\n    showForm: \"hide\"\r\n  };\r\n  onChangeFrom = this.onChangeFrom.bind(this);\r\n  onChangeTo = this.onChangeTo.bind(this);\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({ title: e.target.value });\r\n  }\r\n  onChangePlaces(e) {\r\n    this.setState({ places: e.target.value });\r\n    if (this.state.title.length < 1) this.setState({ title: e.target.value });\r\n  }\r\n  onChangeFrom(date) {\r\n    this.setState({ from: date });\r\n    if (compareAsc(date, this.state.to) > 0) this.setState({ to: date });\r\n  }\r\n  onChangeTo(date) {\r\n    this.setState({ to: date });\r\n  }\r\n  onChangeTransport(e) {\r\n    this.setState({ transport: e.target.value });\r\n  }\r\n  onChangeStatus(e) {\r\n    this.setState({ status: e.target.value });\r\n  }\r\n  onChangeResume(e) {\r\n    this.setState({ resume: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    let from = \"\";\r\n    let to = \"\";\r\n    if (this.state.from) from = format(this.state.from, \"DD/MM/YYYY\");\r\n    if (this.state.to) from = format(this.state.to, \"DD/MM/YYYY\");\r\n    this.setState({\r\n      title: \"\",\r\n      places: \"\",\r\n      from: today,\r\n      to: today,\r\n      resume: \"\"\r\n    });\r\n    this.props.onSendTicket(\r\n      this.state.title,\r\n      this.state.places,\r\n      from,\r\n      to,\r\n      this.state.transport,\r\n      this.state.status,\r\n      this.state.resume\r\n    );\r\n  }\r\n\r\n  displayForm(e, event) {\r\n    e.preventDefault();\r\n    this.setState({ showForm: event });\r\n  }\r\n\r\n  render() {\r\n    const { title, places, from, to, resume, showForm } = this.state;\r\n    return (\r\n      <div className=\"container-fluid row\">\r\n        {showForm === \"show\" ? (\r\n          <form\r\n            className=\"form-newticket form-horizontal col-md-12\"\r\n            onSubmit={e => this.onSubmit(e)}\r\n          >\r\n            <div className=\"container-fluid row\">\r\n              <span className=\"col-md-12 label label-default label-form\">\r\n                Nouveau ticket\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Titre</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={title}\r\n                  id=\"titleTicket\"\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  onChange={e => this.onChangeTitle(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Lieu(x)</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"placesTicket\"\r\n                  type=\"text\"\r\n                  value={places}\r\n                  placeholder=\"\"\r\n                  onChange={e => this.onChangePlaces(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Date du</label>\r\n              <div className=\"col-sm-4 col-md-2\">\r\n                <DatePicker\r\n                  className=\"form-control\"\r\n                  id=\"fromTicket\"\r\n                  selectsStart\r\n                  placeholder=\"\"\r\n                  isClearable={true}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  selected={from}\r\n                  startDate={from}\r\n                  endDate={to}\r\n                  onChange={this.onChangeFrom}\r\n                  showYearDropdown\r\n                  showWeekNumbers\r\n                  dateFormatCalendar=\"MMMM\"\r\n                  scrollableYearDropdown\r\n                  showMonthDropdown\r\n                  yearDropdownItemNumber={80}\r\n                />\r\n              </div>\r\n              <label className=\"col-sm-1 col-form-label\">au</label>\r\n              <div className=\"col-sm-4 col-md-2\">\r\n                <DatePicker\r\n                  className=\"form-control\"\r\n                  id=\"toTicket\"\r\n                  isClearable={true}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  placeholder=\"\"\r\n                  selectsEnd\r\n                  selected={to}\r\n                  startDate={from}\r\n                  endDate={to}\r\n                  onChange={this.onChangeTo}\r\n                  showYearDropdown\r\n                  showWeekNumbers\r\n                  showMonthDropdown\r\n                  dateFormatCalendar=\"MMMM\"\r\n                  scrollableYearDropdown\r\n                  yearDropdownItemNumber={30}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Status</label>\r\n              <div className=\"col-sm-4\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={e => this.onChangeStatus(e)}\r\n                >\r\n                  <option value=\"desire\">Envie</option>\r\n                  <option value=\"planned\">Prévu</option>\r\n                  <option value=\"current\">En cours</option>\r\n                  <option value=\"finished\">Déjà fait</option>\r\n                </select>\r\n              </div>\r\n              <label className=\"col-sm-2 col-form-label\">\r\n                Moyen de transport\r\n              </label>\r\n              <div className=\"col-sm-4\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={e => this.onChangeTransport(e)}\r\n                >\r\n                  <option value=\"none\">Inconnu</option>\r\n                  <option value=\"plane\">Avion</option>\r\n                  <option value=\"ship\">Bateau</option>\r\n                  <option value=\"bus\">Bus</option>\r\n                  <option value=\"motorcycle\">Moto</option>\r\n                  <option value=\"thumbs-up\">Stop</option>\r\n                  <option value=\"train\">Train</option>\r\n                  <option value=\"shuttle-van\">Van</option>\r\n                  <option value=\"bicycle\">Vélo</option>\r\n                  <option value=\"car\">Voiture</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 control-label\">Résumé</label>\r\n              <div className=\"col-sm-10\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  defaultValue={resume}\r\n                  onChange={e => this.onChangeResume(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default\"\r\n              onClick={e => this.displayForm(e, \"hide\")}\r\n            >\r\n              Annuler\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Ajouter\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={e => this.displayForm(e, \"show\")}\r\n          >\r\n            Nouveau Ticket\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTicket;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./bootstrap.css\";\r\n\r\nimport Table from \"./table.js\";\r\nimport NewTicket from \"./newTicket\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    lastID: 7,\r\n    tables: [\"desire\", \"planned\", \"current\", \"finished\"],\r\n    tickets: [\r\n      {\r\n        id: 1,\r\n        status: \"desire\",\r\n        title: \"Amerique du Sud\",\r\n        places: \"Colombie - Pérou\",\r\n        from: \"\",\r\n        to: \"\",\r\n        transport: \"\",\r\n        resume: \"un jour peut-être\"\r\n      },\r\n      {\r\n        id: 2,\r\n        status: \"finished\",\r\n        title: \"Japan\",\r\n        places: \"Japon\",\r\n        from: \"21/05/2016\",\r\n        to: \"10/06/2016\",\r\n        transport: \"plane\",\r\n        resume: \"ZEeeeeeen !!!\"\r\n      },\r\n      {\r\n        id: 3,\r\n        status: \"planned\",\r\n        title: \"Sri Lanka\",\r\n        places: \"Sri lanka\",\r\n        from: \"\",\r\n        to: \"\",\r\n        transport: \"plane\",\r\n        resume: \"Bientôt !!!\"\r\n      },\r\n      {\r\n        id: 4,\r\n        status: \"finished\",\r\n        title: \"Norway\",\r\n        places: \"Norvège\",\r\n        from: \"28/05/2017\",\r\n        to: \"07/06/2017\",\r\n        transport: \"plane\",\r\n        resume: \"Mouillé !!!\"\r\n      },\r\n      {\r\n        id: 5,\r\n        status: \"current\",\r\n        title: \"Chez les parents\",\r\n        places: \"Lyon\",\r\n        from: \"01/12/2018\",\r\n        to: \"\",\r\n        transport: \"\",\r\n        resume: \"Trop long !!!\"\r\n      },\r\n      {\r\n        id: 6,\r\n        status: \"finished\",\r\n        title: \"Asia 2k18\",\r\n        places: \"Japon\",\r\n        from: \"23/01/2018\",\r\n        to: \"07/06/2018\",\r\n        transport: \"plane\",\r\n        resume: \"Enorme !!!\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData(\"id\");\r\n    let tickets = this.state.tickets.filter(tiket => {\r\n      if (tiket.id == id) {\r\n        tiket.status = cat;\r\n      }\r\n      return tiket;\r\n    });\r\n    this.setState({ tickets, tickets });\r\n  };\r\n\r\n  onDeleteTicket = id => {\r\n    const tickets = this.state.tickets;\r\n    let index = tickets.findIndex(x => x.id === id);\r\n    tickets.splice(index, 1);\r\n    this.setState({ tickets });\r\n  };\r\n\r\n  onSendTicket = (\r\n    newTitle,\r\n    newPlaces,\r\n    newFrom,\r\n    newTo,\r\n    newTransport,\r\n    newStatus,\r\n    newResume\r\n  ) => {\r\n    const tickets = this.state.tickets;\r\n    let lastID = this.state.lastID;\r\n    console.log(newFrom);\r\n    tickets.push({\r\n      id: lastID,\r\n      title: newTitle,\r\n      places: newPlaces,\r\n      from: newFrom,\r\n      to: newTo,\r\n      transport: newTransport,\r\n      status: newStatus,\r\n      resume: newResume\r\n    });\r\n    this.setState({ tickets: tickets, lastID: lastID + 1 });\r\n  };\r\n\r\n  orderingTable = (tables, tickets) => {\r\n    let currentTable = [];\r\n    let currentTickets;\r\n    tables.map(table => {\r\n      currentTickets = tickets.filter(ticket => ticket.status === table);\r\n      currentTable.push({ status: table, tickets: currentTickets });\r\n    });\r\n    return currentTable;\r\n  };\r\n\r\n  render() {\r\n    const { tables, tickets } = this.state;\r\n    let orderedTable = this.orderingTable(tables, tickets);\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n          <span className=\"navbar-brand mb-0 h1\">Pounda</span>\r\n        </nav>\r\n        <div className=\"main-container container-fluid row\">\r\n          {orderedTable.map(table => (\r\n            <div\r\n              key={table.status}\r\n              className=\"table-container col-md-3 container-fluid row\"\r\n            >\r\n              <Table\r\n                status={table.status}\r\n                tickets={table.tickets}\r\n                onDrop={this.onDrop}\r\n                onDeleteTicket={this.onDeleteTicket}\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"form-container col-md-12 container-fluid row\">\r\n            <NewTicket onSendTicket={this.onSendTicket} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}